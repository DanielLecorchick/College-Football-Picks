<!DOCTYPE html>
<html lang = "en">
<head>
    <meta charset = "UTF-8">
    <meta name = "viewport" content = "width = device-width, initial-scale = 1.0">
    <title>Game Details</title>
    <link rel="stylesheet" href="/css/details.css">
</head>
<body>
    <div id="details" class ="details">
        <script>
            async function fetchTop25() {
                try{
                    // pulls all the top 25 teams and ranking data from the rankings API
                    const rankingsResponse = await fetch("https://site.api.espn.com/apis/site/v2/sports/football/college-football/rankings")
                    const rankingsData = await rankingsResponse.json()
                    const top25Teams = rankingsData.rankings[0].ranks.map(rank => rank.team.id)

                    // pulls game data such as match ups and times of games from the scorecoard API
                    //filepath to leaders = object/events/0/competitions/0/leaders
                    const gamesResponse = await fetch("https://site.api.espn.com/apis/site/v2/sports/football/college-football/scoreboard")
                    const gamesData = await gamesResponse.json()
                    console.log(gamesData)
                    createDisplay(top25Teams, gamesData)
                }
                catch (error){
                    console.error("Error fetching data:", error)
                }
            }

            function createDisplay(top25Teams, gamesData) {
                // Set the webpage title and header
                var displayTitle = ""
                if (top25Teams.indexOf(homeTeam.team.id) != -1) {
                    displayTitle += "#" + (top25Teams.indexOf(homeTeam.team.id)+1) + " "
                }
                displayTitle += homeTeam.team.displayName + " vs "
                if (top25Teams.indexOf(awayTeam.team.id) != -1) {
                    displayTitle += "#" + (top25Teams.indexOf(awayTeam.team.id)+1) + " "
                }
                displayTitle += awayTeam.team.displayName
                document.title = displayTitle

                const detailsDiv = document.getElementById("details")
                const header = document.createElement('h1')
                header.textContent = displayTitle
                detailsDiv.appendChild(header)

                var officialTitle = awayTeam.team.displayName + " at " + homeTeam.team.displayName
                let gameInfo = null
                for (let element of gamesData.events) {
                    if (element.name === officialTitle) {
                        gameInfo = element
                        break
                    }
                }
                if(gameInfo) {
                    console.log(gameInfo)
                }

                var displayTable = false;
                const gameStatus = document.createElement('h2')
                if(gameInfo.status.type.state === "post") {
                    gameStatus.textContent = "Final: " + homeTeam.score + " - " + awayTeam.score
                    displayTable = true
                }
                else if (gameInfo.status.type.state === "pre") {
                    gameStatus.textContent = gameInfo.status.type.shortDetail
                }
                else {
                    gameStatus.textContent = "Ongoing"
                    displayTable = true
                }
                detailsDiv.appendChild(gameStatus)
                if (displayTable) {
                    const table = document.createElement('table')
                    table.style.border = "1px solid black"

                    const createRow = (data) => {
                        const row = document.createElement('tr')
                        data.forEach(item => {
                            const cell = document.createElement('td')
                            cell.style.border = "1px solid black"
                            cell.textContent = item
                            row.appendChild(cell)
                        })
                        return row
                    }

                    const quarterLabels = [
                        ...Array.from({ length: Math.min(homeTeam.linescores.length, 4) }, (_, i) => `Q${i + 1}`),
                        ...Array.from({ length: Math.max(homeTeam.linescores.length - 4, 0) }, (_, i) => `OT${i + 1}`)
                    ];
                    const tableFormat = ["Teams", ...quarterLabels, "Final"]
                    table.appendChild(createRow(tableFormat))

                    const homeFormat = [
                        homeTeam.team.abbreviation,
                        ...homeTeam.linescores.map(score => score.value),
                        homeTeam.score
                    ]
                    table.appendChild(createRow(homeFormat))

                    const awayFormat = [
                        awayTeam.team.abbreviation,
                        ...awayTeam.linescores.map(score => score.value),
                        awayTeam.score
                    ];
                    table.appendChild(createRow(awayFormat))

                    detailsDiv.appendChild(table)
                }

                const generateSubHeading = (headerType, inputString) => {
                    const items = Array.isArray(inputString) ? inputString : [inputString];
                    items.forEach(item => {
                        const genDetails = document.createElement(headerType)
                        genDetails.textContent = item
                        detailsDiv.appendChild(genDetails)
                    })
                    
                }

                generateSubHeading("h2", "General Info:")
                generateSubHeading("h3", ["Date: " + gameInfo.date.substring(0, 10), "Time: " + gameInfo.date.substring(11, 16),
                    "Venue: " + gameInfo.competitions[0].venue.fullName, "Attendance: " + gameInfo.competitions[0].attendance])
                //const gameDetails = document.createElement('p')
                //gameDetails.textContent = "Here you can add more game details..."
                //detailsDiv.appendChild(gameDetails)
            }

            // Retrieve data from localStorage
            const homeTeam = JSON.parse(localStorage.getItem('homeTeam'))
            const awayTeam = JSON.parse(localStorage.getItem('awayTeam'))
            // Ensure the data is valid
            if (homeTeam && awayTeam) {
                console.log(homeTeam)
                console.log(awayTeam)
                document.documentElement.style.setProperty('--home-team-color', `#${homeTeam.team.color}`)
                document.documentElement.style.setProperty('--away-team-color', `#${awayTeam.team.color}`)
                fetchTop25()
            }
        </script>
    </div>
</body>
</html>
