<!-- Fully completed, allows the user to add their name, username, email, password, and confirm their password --> 
<!DOCTYPE html>
<html lang = "en">
<head>
    <meta charset = "UTF-8">
    <meta name = "viewport" content = "width = device-width, initial-scale = 1.0">
    <title>Sign Up</title>
    <link rel="stylesheet" href="/css/signup.css">
</head>
<body>
    <div class = "glass-container">
        <div class = "signup-box">
            <h2>Sign Up</h2>
            <form action = "/signup" method = "POST">
                <input type = "name" id = "firstName" name = "firstName" required placeholder = "First Name">
                <input type = "name" id = "lastName" name = "lastName" required placeholder = "Last Name">
                <input type = "text" id = "username" name = "username" required placeholder = "Username">
                <input type = "email" id = "email" name = "email" required placeholder = "Email">
                <input type = "password" id = "password" name = "password" required placeholder = "Password">
                <input type = "password" id = "confirm-password" name = "confirm-password" required placeholder = "Confirm Password">
                <button type = "submit">Sign Up</button>
                <p>Already have an account? <a href = "./login" id = "login">Login</a></p>
            </form>
        </div>

        <script>
            async function fetchTeams() {
                
                try{
                    const teamResponse = await fetch(`https://site.api.espn.com/apis/site/v2/sports/football/college-football/teams/${"<%= user.favoriteTeam %>"}`)
                    const teamData = await teamResponse.json()
                    console.log(teamData)
                    renderPage(teamData)
                }
                catch (error){
                    console.error("Error fetching data:", error)
                }
            }
            function renderDropDown() {
                // Populate a dropdown (select element) with team names
                const select = document.createElement('select');
                teamNames.forEach((teamID, teamName) => {
                    const option = document.createElement('option');
                    option.value = teamID;  // Set value to team_id
                    option.textContent = teamName;  // Display team name
                    select.appendChild(option);
                });
                // Replace the input field with the select dropdown
                favoriteTeamInput.replaceWith(select);
                // Add hidden input to hold selected favorite team
                const hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = 'favoriteTeam';
                hiddenInput.id = 'hiddenFavoriteTeam';
                document.querySelector('form').appendChild(hiddenInput);
                // Add event listener to update the hidden input with the selected team id
                select.addEventListener('change', (event) => {
                    // Set the hidden input's value to the selected team id
                    document.getElementById('hiddenFavoriteTeam').value = event.target.value;
                });
                // Set the initial hidden value if there's a pre-selected team
                if (favoriteTeamInput.value) {
                    document.getElementById('hiddenFavoriteTeam').value = favoriteTeamInput.value;
                }
            }
            // Parse the JSON string into a JavaScript object
            const fbsTeams = <%- JSON.stringify(fbsTeams) %>;
        
            // Log the fbsTeams object to confirm it's passed correctly
            fbsTeams.sort((a, b) => a[0].localeCompare(b[0]));
            console.log(fbsTeams);
            // Example usage: populate the Favorite Team input with the list of team names
            const favoriteTeamInput = document.getElementById('favoriteTeam');
            const teamNames = new Map();
            const teamIDs = new Map();
            fbsTeams.forEach(team => {
                const teamName = team[0];
                const teamID = team[1];
                teamNames.set(teamName, teamID);  // Map "Team Name" => team_id
                teamIDs.set(teamID, teamName);    // Map team_id => "Team Name"
            });
            console.log('teamNames:', teamNames);
            console.log('teamIDs:', teamIDs);
            renderDropDown()
            fetchTeams()


            document.querySelector("form").addEventListener("submit", (e) => {
            const password = document.getElementById("password").value;
            const confirmPassword = document.getElementById("confirm-password").value;
            if (password !== confirmPassword) {
                e.preventDefault();
                alert("Passwords do not match");
            }
        });
        </script>
    </div>
</body>
</html>